/*
CouchDB API

*Note* This is not a definitive implementation of the CouchDB API, it's missing a lot of the endpoints for server/database managment and everything for attachments all COPY operations and probably a few other parts.  It also targets golang, as such the '#/definitions/Document' is intentionally left empty to generate a go `interface`, which you can then cast to a `map[string]interface{}`. 

API version: 4.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchdb_go

import (
	"encoding/json"
)

// checks if the Body5 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Body5{}

// Body5 struct for Body5
type Body5 struct {
	Admins *Admins `json:"admins,omitempty"`
	Members *Members `json:"members,omitempty"`
}

// NewBody5 instantiates a new Body5 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBody5() *Body5 {
	this := Body5{}
	return &this
}

// NewBody5WithDefaults instantiates a new Body5 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBody5WithDefaults() *Body5 {
	this := Body5{}
	return &this
}

// GetAdmins returns the Admins field value if set, zero value otherwise.
func (o *Body5) GetAdmins() Admins {
	if o == nil || IsNil(o.Admins) {
		var ret Admins
		return ret
	}
	return *o.Admins
}

// GetAdminsOk returns a tuple with the Admins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Body5) GetAdminsOk() (*Admins, bool) {
	if o == nil || IsNil(o.Admins) {
		return nil, false
	}
	return o.Admins, true
}

// HasAdmins returns a boolean if a field has been set.
func (o *Body5) HasAdmins() bool {
	if o != nil && !IsNil(o.Admins) {
		return true
	}

	return false
}

// SetAdmins gets a reference to the given Admins and assigns it to the Admins field.
func (o *Body5) SetAdmins(v Admins) {
	o.Admins = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *Body5) GetMembers() Members {
	if o == nil || IsNil(o.Members) {
		var ret Members
		return ret
	}
	return *o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Body5) GetMembersOk() (*Members, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *Body5) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given Members and assigns it to the Members field.
func (o *Body5) SetMembers(v Members) {
	o.Members = &v
}

func (o Body5) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Body5) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Admins) {
		toSerialize["admins"] = o.Admins
	}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	return toSerialize, nil
}

type NullableBody5 struct {
	value *Body5
	isSet bool
}

func (v NullableBody5) Get() *Body5 {
	return v.value
}

func (v *NullableBody5) Set(val *Body5) {
	v.value = val
	v.isSet = true
}

func (v NullableBody5) IsSet() bool {
	return v.isSet
}

func (v *NullableBody5) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBody5(val *Body5) *NullableBody5 {
	return &NullableBody5{value: val, isSet: true}
}

func (v NullableBody5) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBody5) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


