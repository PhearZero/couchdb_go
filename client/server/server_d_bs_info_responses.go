// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/RossMerr/couchdb_go/models"
)

// ServerDBsInfoReader is a Reader for the ServerDBsInfo structure.
type ServerDBsInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServerDBsInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServerDBsInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewServerDBsInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewServerDBsInfoOK creates a ServerDBsInfoOK with default headers values
func NewServerDBsInfoOK() *ServerDBsInfoOK {
	return &ServerDBsInfoOK{}
}

/*ServerDBsInfoOK handles this case with default header values.

Request completed successfully
*/
type ServerDBsInfoOK struct {
	Payload []*ServerDBsInfoOKBodyItems0
}

func (o *ServerDBsInfoOK) Error() string {
	return fmt.Sprintf("[POST /_dbs_info][%d] serverDBsInfoOK  %+v", 200, o.Payload)
}

func (o *ServerDBsInfoOK) GetPayload() []*ServerDBsInfoOKBodyItems0 {
	return o.Payload
}

func (o *ServerDBsInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServerDBsInfoBadRequest creates a ServerDBsInfoBadRequest with default headers values
func NewServerDBsInfoBadRequest() *ServerDBsInfoBadRequest {
	return &ServerDBsInfoBadRequest{}
}

/*ServerDBsInfoBadRequest handles this case with default header values.

Missing keys or exceeded keys in request
*/
type ServerDBsInfoBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *ServerDBsInfoBadRequest) Error() string {
	return fmt.Sprintf("[POST /_dbs_info][%d] serverDBsInfoBadRequest  %+v", 400, o.Payload)
}

func (o *ServerDBsInfoBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ServerDBsInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ServerDBsInfoOKBodyItems0 server d bs info o k body items0
swagger:model ServerDBsInfoOKBodyItems0
*/
type ServerDBsInfoOKBodyItems0 struct {

	// info
	Info *models.Database `json:"info,omitempty"`

	// key
	Key string `json:"key,omitempty"`
}

// Validate validates this server d bs info o k body items0
func (o *ServerDBsInfoOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateInfo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ServerDBsInfoOKBodyItems0) validateInfo(formats strfmt.Registry) error {

	if swag.IsZero(o.Info) { // not required
		return nil
	}

	if o.Info != nil {
		if err := o.Info.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("info")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ServerDBsInfoOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServerDBsInfoOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res ServerDBsInfoOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
