// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/RossMerr/couchdb_go/models"
)

// ServerActiveTasksReader is a Reader for the ServerActiveTasks structure.
type ServerActiveTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServerActiveTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServerActiveTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewServerActiveTasksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewServerActiveTasksOK creates a ServerActiveTasksOK with default headers values
func NewServerActiveTasksOK() *ServerActiveTasksOK {
	return &ServerActiveTasksOK{}
}

/*ServerActiveTasksOK handles this case with default header values.

Request completed successfully
*/
type ServerActiveTasksOK struct {
	Payload []*models.Task
}

func (o *ServerActiveTasksOK) Error() string {
	return fmt.Sprintf("[GET /_active_tasks][%d] serverActiveTasksOK  %+v", 200, o.Payload)
}

func (o *ServerActiveTasksOK) GetPayload() []*models.Task {
	return o.Payload
}

func (o *ServerActiveTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServerActiveTasksUnauthorized creates a ServerActiveTasksUnauthorized with default headers values
func NewServerActiveTasksUnauthorized() *ServerActiveTasksUnauthorized {
	return &ServerActiveTasksUnauthorized{}
}

/*ServerActiveTasksUnauthorized handles this case with default header values.

CouchDB Server Administrator privileges required
*/
type ServerActiveTasksUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *ServerActiveTasksUnauthorized) Error() string {
	return fmt.Sprintf("[GET /_active_tasks][%d] serverActiveTasksUnauthorized  %+v", 401, o.Payload)
}

func (o *ServerActiveTasksUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ServerActiveTasksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
