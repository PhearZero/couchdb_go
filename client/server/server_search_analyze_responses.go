// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/RossMerr/couchdb_go/models"
)

// ServerSearchAnalyzeReader is a Reader for the ServerSearchAnalyze structure.
type ServerSearchAnalyzeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServerSearchAnalyzeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServerSearchAnalyzeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewServerSearchAnalyzeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewServerSearchAnalyzeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewServerSearchAnalyzeOK creates a ServerSearchAnalyzeOK with default headers values
func NewServerSearchAnalyzeOK() *ServerSearchAnalyzeOK {
	return &ServerSearchAnalyzeOK{}
}

/*ServerSearchAnalyzeOK handles this case with default header values.

Request completed successfully
*/
type ServerSearchAnalyzeOK struct {
	Payload *ServerSearchAnalyzeOKBody
}

func (o *ServerSearchAnalyzeOK) Error() string {
	return fmt.Sprintf("[POST /_search_analyze][%d] serverSearchAnalyzeOK  %+v", 200, o.Payload)
}

func (o *ServerSearchAnalyzeOK) GetPayload() *ServerSearchAnalyzeOKBody {
	return o.Payload
}

func (o *ServerSearchAnalyzeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ServerSearchAnalyzeOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServerSearchAnalyzeBadRequest creates a ServerSearchAnalyzeBadRequest with default headers values
func NewServerSearchAnalyzeBadRequest() *ServerSearchAnalyzeBadRequest {
	return &ServerSearchAnalyzeBadRequest{}
}

/*ServerSearchAnalyzeBadRequest handles this case with default header values.

Request body is wrong (malformed or missing one of the mandatory fields)
*/
type ServerSearchAnalyzeBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *ServerSearchAnalyzeBadRequest) Error() string {
	return fmt.Sprintf("[POST /_search_analyze][%d] serverSearchAnalyzeBadRequest  %+v", 400, o.Payload)
}

func (o *ServerSearchAnalyzeBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ServerSearchAnalyzeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServerSearchAnalyzeInternalServerError creates a ServerSearchAnalyzeInternalServerError with default headers values
func NewServerSearchAnalyzeInternalServerError() *ServerSearchAnalyzeInternalServerError {
	return &ServerSearchAnalyzeInternalServerError{}
}

/*ServerSearchAnalyzeInternalServerError handles this case with default header values.

A server error (or other kind of error) occurred
*/
type ServerSearchAnalyzeInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ServerSearchAnalyzeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /_search_analyze][%d] serverSearchAnalyzeInternalServerError  %+v", 500, o.Payload)
}

func (o *ServerSearchAnalyzeInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ServerSearchAnalyzeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ServerSearchAnalyzeBody server search analyze body
swagger:model ServerSearchAnalyzeBody
*/
type ServerSearchAnalyzeBody struct {

	// Type of analyzer
	Field string `json:"field,omitempty"`

	// Analyzer token you want to test
	Text string `json:"text,omitempty"`
}

// Validate validates this server search analyze body
func (o *ServerSearchAnalyzeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ServerSearchAnalyzeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServerSearchAnalyzeBody) UnmarshalBinary(b []byte) error {
	var res ServerSearchAnalyzeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ServerSearchAnalyzeOKBody server search analyze o k body
swagger:model ServerSearchAnalyzeOKBody
*/
type ServerSearchAnalyzeOKBody struct {

	// tokens
	Tokens []string `json:"tokens"`
}

// Validate validates this server search analyze o k body
func (o *ServerSearchAnalyzeOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ServerSearchAnalyzeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServerSearchAnalyzeOKBody) UnmarshalBinary(b []byte) error {
	var res ServerSearchAnalyzeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
