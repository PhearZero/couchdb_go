// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/RossMerr/couchdb_go/models"
)

// ServerReplicationReader is a Reader for the ServerReplication structure.
type ServerReplicationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServerReplicationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServerReplicationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewServerReplicationAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewServerReplicationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewServerReplicationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewServerReplicationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewServerReplicationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewServerReplicationOK creates a ServerReplicationOK with default headers values
func NewServerReplicationOK() *ServerReplicationOK {
	return &ServerReplicationOK{}
}

/*ServerReplicationOK handles this case with default header values.

Replication request successfully completed
*/
type ServerReplicationOK struct {
	Payload *models.Replication
}

func (o *ServerReplicationOK) Error() string {
	return fmt.Sprintf("[POST /_replicate][%d] serverReplicationOK  %+v", 200, o.Payload)
}

func (o *ServerReplicationOK) GetPayload() *models.Replication {
	return o.Payload
}

func (o *ServerReplicationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Replication)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServerReplicationAccepted creates a ServerReplicationAccepted with default headers values
func NewServerReplicationAccepted() *ServerReplicationAccepted {
	return &ServerReplicationAccepted{}
}

/*ServerReplicationAccepted handles this case with default header values.

Continuous replication request has been accepted
*/
type ServerReplicationAccepted struct {
	Payload *models.OK
}

func (o *ServerReplicationAccepted) Error() string {
	return fmt.Sprintf("[POST /_replicate][%d] serverReplicationAccepted  %+v", 202, o.Payload)
}

func (o *ServerReplicationAccepted) GetPayload() *models.OK {
	return o.Payload
}

func (o *ServerReplicationAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OK)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServerReplicationBadRequest creates a ServerReplicationBadRequest with default headers values
func NewServerReplicationBadRequest() *ServerReplicationBadRequest {
	return &ServerReplicationBadRequest{}
}

/*ServerReplicationBadRequest handles this case with default header values.

Invalid JSON data
*/
type ServerReplicationBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *ServerReplicationBadRequest) Error() string {
	return fmt.Sprintf("[POST /_replicate][%d] serverReplicationBadRequest  %+v", 400, o.Payload)
}

func (o *ServerReplicationBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ServerReplicationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServerReplicationUnauthorized creates a ServerReplicationUnauthorized with default headers values
func NewServerReplicationUnauthorized() *ServerReplicationUnauthorized {
	return &ServerReplicationUnauthorized{}
}

/*ServerReplicationUnauthorized handles this case with default header values.

CouchDB Server Administrator privileges required
*/
type ServerReplicationUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *ServerReplicationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /_replicate][%d] serverReplicationUnauthorized  %+v", 401, o.Payload)
}

func (o *ServerReplicationUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ServerReplicationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServerReplicationNotFound creates a ServerReplicationNotFound with default headers values
func NewServerReplicationNotFound() *ServerReplicationNotFound {
	return &ServerReplicationNotFound{}
}

/*ServerReplicationNotFound handles this case with default header values.

Either the source or target DB is not found or attempt to cancel unknown replication task
*/
type ServerReplicationNotFound struct {
	Payload *models.ErrorResponse
}

func (o *ServerReplicationNotFound) Error() string {
	return fmt.Sprintf("[POST /_replicate][%d] serverReplicationNotFound  %+v", 404, o.Payload)
}

func (o *ServerReplicationNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ServerReplicationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServerReplicationInternalServerError creates a ServerReplicationInternalServerError with default headers values
func NewServerReplicationInternalServerError() *ServerReplicationInternalServerError {
	return &ServerReplicationInternalServerError{}
}

/*ServerReplicationInternalServerError handles this case with default header values.

JSON specification was invalid
*/
type ServerReplicationInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ServerReplicationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /_replicate][%d] serverReplicationInternalServerError  %+v", 500, o.Payload)
}

func (o *ServerReplicationInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ServerReplicationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
