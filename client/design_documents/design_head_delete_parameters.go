// Code generated by go-swagger; DO NOT EDIT.

package design_documents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDesignHeadDeleteParams creates a new DesignHeadDeleteParams object
// with the default values initialized.
func NewDesignHeadDeleteParams() *DesignHeadDeleteParams {
	var ()
	return &DesignHeadDeleteParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDesignHeadDeleteParamsWithTimeout creates a new DesignHeadDeleteParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDesignHeadDeleteParamsWithTimeout(timeout time.Duration) *DesignHeadDeleteParams {
	var ()
	return &DesignHeadDeleteParams{

		timeout: timeout,
	}
}

// NewDesignHeadDeleteParamsWithContext creates a new DesignHeadDeleteParams object
// with the default values initialized, and the ability to set a context for a request
func NewDesignHeadDeleteParamsWithContext(ctx context.Context) *DesignHeadDeleteParams {
	var ()
	return &DesignHeadDeleteParams{

		Context: ctx,
	}
}

// NewDesignHeadDeleteParamsWithHTTPClient creates a new DesignHeadDeleteParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDesignHeadDeleteParamsWithHTTPClient(client *http.Client) *DesignHeadDeleteParams {
	var ()
	return &DesignHeadDeleteParams{
		HTTPClient: client,
	}
}

/*DesignHeadDeleteParams contains all the parameters to send to the API endpoint
for the design head delete operation typically these are written to a http.Request
*/
type DesignHeadDeleteParams struct {

	/*IfMatch
	  Document’s revision. Alternative to rev query parameter

	*/
	IfMatch *string
	/*Batch
	  Stores document in batch mode Possible values: ok. Optional


	*/
	Batch *string
	/*Db
	  Database name

	*/
	Db string
	/*Ddoc
	  Design document id

	*/
	Ddoc string
	/*Rev
	  Actual document’s revision

	*/
	Rev *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the design head delete params
func (o *DesignHeadDeleteParams) WithTimeout(timeout time.Duration) *DesignHeadDeleteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the design head delete params
func (o *DesignHeadDeleteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the design head delete params
func (o *DesignHeadDeleteParams) WithContext(ctx context.Context) *DesignHeadDeleteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the design head delete params
func (o *DesignHeadDeleteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the design head delete params
func (o *DesignHeadDeleteParams) WithHTTPClient(client *http.Client) *DesignHeadDeleteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the design head delete params
func (o *DesignHeadDeleteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIfMatch adds the ifMatch to the design head delete params
func (o *DesignHeadDeleteParams) WithIfMatch(ifMatch *string) *DesignHeadDeleteParams {
	o.SetIfMatch(ifMatch)
	return o
}

// SetIfMatch adds the ifMatch to the design head delete params
func (o *DesignHeadDeleteParams) SetIfMatch(ifMatch *string) {
	o.IfMatch = ifMatch
}

// WithBatch adds the batch to the design head delete params
func (o *DesignHeadDeleteParams) WithBatch(batch *string) *DesignHeadDeleteParams {
	o.SetBatch(batch)
	return o
}

// SetBatch adds the batch to the design head delete params
func (o *DesignHeadDeleteParams) SetBatch(batch *string) {
	o.Batch = batch
}

// WithDb adds the db to the design head delete params
func (o *DesignHeadDeleteParams) WithDb(db string) *DesignHeadDeleteParams {
	o.SetDb(db)
	return o
}

// SetDb adds the db to the design head delete params
func (o *DesignHeadDeleteParams) SetDb(db string) {
	o.Db = db
}

// WithDdoc adds the ddoc to the design head delete params
func (o *DesignHeadDeleteParams) WithDdoc(ddoc string) *DesignHeadDeleteParams {
	o.SetDdoc(ddoc)
	return o
}

// SetDdoc adds the ddoc to the design head delete params
func (o *DesignHeadDeleteParams) SetDdoc(ddoc string) {
	o.Ddoc = ddoc
}

// WithRev adds the rev to the design head delete params
func (o *DesignHeadDeleteParams) WithRev(rev *string) *DesignHeadDeleteParams {
	o.SetRev(rev)
	return o
}

// SetRev adds the rev to the design head delete params
func (o *DesignHeadDeleteParams) SetRev(rev *string) {
	o.Rev = rev
}

// WriteToRequest writes these params to a swagger request
func (o *DesignHeadDeleteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IfMatch != nil {

		// header param If-Match
		if err := r.SetHeaderParam("If-Match", *o.IfMatch); err != nil {
			return err
		}

	}

	if o.Batch != nil {

		// query param batch
		var qrBatch string
		if o.Batch != nil {
			qrBatch = *o.Batch
		}
		qBatch := qrBatch
		if qBatch != "" {
			if err := r.SetQueryParam("batch", qBatch); err != nil {
				return err
			}
		}

	}

	// path param db
	if err := r.SetPathParam("db", o.Db); err != nil {
		return err
	}

	// path param ddoc
	if err := r.SetPathParam("ddoc", o.Ddoc); err != nil {
		return err
	}

	if o.Rev != nil {

		// query param rev
		var qrRev string
		if o.Rev != nil {
			qrRev = *o.Rev
		}
		qRev := qrRev
		if qRev != "" {
			if err := r.SetQueryParam("rev", qRev); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
