// Code generated by go-swagger; DO NOT EDIT.

package database

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/RossMerr/couchdb_go/models"
)

// BulkPostAllReader is a Reader for the BulkPostAll structure.
type BulkPostAllReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BulkPostAllReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewBulkPostAllCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBulkPostAllBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBulkPostAllNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBulkPostAllCreated creates a BulkPostAllCreated with default headers values
func NewBulkPostAllCreated() *BulkPostAllCreated {
	return &BulkPostAllCreated{}
}

/*BulkPostAllCreated handles this case with default header values.

Document(s) have been created or updated
*/
type BulkPostAllCreated struct {
	Payload []*models.Results
}

func (o *BulkPostAllCreated) Error() string {
	return fmt.Sprintf("[POST /{db}/_bulk_get][%d] bulkPostAllCreated  %+v", 201, o.Payload)
}

func (o *BulkPostAllCreated) GetPayload() []*models.Results {
	return o.Payload
}

func (o *BulkPostAllCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkPostAllBadRequest creates a BulkPostAllBadRequest with default headers values
func NewBulkPostAllBadRequest() *BulkPostAllBadRequest {
	return &BulkPostAllBadRequest{}
}

/*BulkPostAllBadRequest handles this case with default header values.

The request provided invalid JSON data
*/
type BulkPostAllBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *BulkPostAllBadRequest) Error() string {
	return fmt.Sprintf("[POST /{db}/_bulk_get][%d] bulkPostAllBadRequest  %+v", 400, o.Payload)
}

func (o *BulkPostAllBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *BulkPostAllBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkPostAllNotFound creates a BulkPostAllNotFound with default headers values
func NewBulkPostAllNotFound() *BulkPostAllNotFound {
	return &BulkPostAllNotFound{}
}

/*BulkPostAllNotFound handles this case with default header values.

Requested database not found
*/
type BulkPostAllNotFound struct {
	Payload *models.ErrorResponse
}

func (o *BulkPostAllNotFound) Error() string {
	return fmt.Sprintf("[POST /{db}/_bulk_get][%d] bulkPostAllNotFound  %+v", 404, o.Payload)
}

func (o *BulkPostAllNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *BulkPostAllNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*BulkPostAllBody bulk post all body
swagger:model BulkPostAllBody
*/
type BulkPostAllBody struct {

	// docs
	Docs []*BulkPostAllParamsBodyDocsItems0 `json:"docs"`
}

// Validate validates this bulk post all body
func (o *BulkPostAllBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDocs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BulkPostAllBody) validateDocs(formats strfmt.Registry) error {

	if swag.IsZero(o.Docs) { // not required
		return nil
	}

	for i := 0; i < len(o.Docs); i++ {
		if swag.IsZero(o.Docs[i]) { // not required
			continue
		}

		if o.Docs[i] != nil {
			if err := o.Docs[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "docs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *BulkPostAllBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BulkPostAllBody) UnmarshalBinary(b []byte) error {
	var res BulkPostAllBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*BulkPostAllParamsBodyDocsItems0 bulk post all params body docs items0
swagger:model BulkPostAllParamsBodyDocsItems0
*/
type BulkPostAllParamsBodyDocsItems0 struct {

	// Document ID
	ID string `json:"id,omitempty"`

	// Revision MVCC token
	Rev string `json:"rev,omitempty"`
}

// Validate validates this bulk post all params body docs items0
func (o *BulkPostAllParamsBodyDocsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BulkPostAllParamsBodyDocsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BulkPostAllParamsBodyDocsItems0) UnmarshalBinary(b []byte) error {
	var res BulkPostAllParamsBodyDocsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
