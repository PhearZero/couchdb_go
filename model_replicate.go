/*
CouchDB API

*Note* This is not a definitive implementation of the CouchDB API, it's missing a lot of the endpoints for server/database managment and everything for attachments all COPY operations and probably a few other parts.  It also targets golang, as such the '#/definitions/Document' is intentionally left empty to generate a go `interface`, which you can then cast to a `map[string]interface{}`. 

API version: 4.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchdb_go

import (
	"encoding/json"
)

// checks if the Replicate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Replicate{}

// Replicate struct for Replicate
type Replicate struct {
	// Cancels the replication
	Cancel *bool `json:"cancel,omitempty"`
	// Configure the replication to be continuous
	Continuous *bool `json:"continuous,omitempty"`
	// Creates the target database. Required administrator’s privileges on target server.
	CreateTarget *bool `json:"create_target,omitempty"`
	CreateTargetParams *ReplicateCreateTargetParams `json:"create_target_params,omitempty"`
	// Array of document IDs to be synchronized
	DocIds []string `json:"doc_ids,omitempty"`
	// The name of a filter function.
	Filter *string `json:"filter,omitempty"`
	// Address of a proxy server through which replication from the source should occur (protocol can be “http” or “socks5”)
	SourceProxy *string `json:"source_proxy,omitempty"`
	// Address of a proxy server through which replication to the target should occur (protocol can be “http” or “socks5”)
	TargetProxy *string `json:"target_proxy,omitempty"`
	Source *Request `json:"source,omitempty"`
	Target *Request `json:"target,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Replicate Replicate

// NewReplicate instantiates a new Replicate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicate() *Replicate {
	this := Replicate{}
	return &this
}

// NewReplicateWithDefaults instantiates a new Replicate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicateWithDefaults() *Replicate {
	this := Replicate{}
	return &this
}

// GetCancel returns the Cancel field value if set, zero value otherwise.
func (o *Replicate) GetCancel() bool {
	if o == nil || IsNil(o.Cancel) {
		var ret bool
		return ret
	}
	return *o.Cancel
}

// GetCancelOk returns a tuple with the Cancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Replicate) GetCancelOk() (*bool, bool) {
	if o == nil || IsNil(o.Cancel) {
		return nil, false
	}
	return o.Cancel, true
}

// HasCancel returns a boolean if a field has been set.
func (o *Replicate) HasCancel() bool {
	if o != nil && !IsNil(o.Cancel) {
		return true
	}

	return false
}

// SetCancel gets a reference to the given bool and assigns it to the Cancel field.
func (o *Replicate) SetCancel(v bool) {
	o.Cancel = &v
}

// GetContinuous returns the Continuous field value if set, zero value otherwise.
func (o *Replicate) GetContinuous() bool {
	if o == nil || IsNil(o.Continuous) {
		var ret bool
		return ret
	}
	return *o.Continuous
}

// GetContinuousOk returns a tuple with the Continuous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Replicate) GetContinuousOk() (*bool, bool) {
	if o == nil || IsNil(o.Continuous) {
		return nil, false
	}
	return o.Continuous, true
}

// HasContinuous returns a boolean if a field has been set.
func (o *Replicate) HasContinuous() bool {
	if o != nil && !IsNil(o.Continuous) {
		return true
	}

	return false
}

// SetContinuous gets a reference to the given bool and assigns it to the Continuous field.
func (o *Replicate) SetContinuous(v bool) {
	o.Continuous = &v
}

// GetCreateTarget returns the CreateTarget field value if set, zero value otherwise.
func (o *Replicate) GetCreateTarget() bool {
	if o == nil || IsNil(o.CreateTarget) {
		var ret bool
		return ret
	}
	return *o.CreateTarget
}

// GetCreateTargetOk returns a tuple with the CreateTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Replicate) GetCreateTargetOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateTarget) {
		return nil, false
	}
	return o.CreateTarget, true
}

// HasCreateTarget returns a boolean if a field has been set.
func (o *Replicate) HasCreateTarget() bool {
	if o != nil && !IsNil(o.CreateTarget) {
		return true
	}

	return false
}

// SetCreateTarget gets a reference to the given bool and assigns it to the CreateTarget field.
func (o *Replicate) SetCreateTarget(v bool) {
	o.CreateTarget = &v
}

// GetCreateTargetParams returns the CreateTargetParams field value if set, zero value otherwise.
func (o *Replicate) GetCreateTargetParams() ReplicateCreateTargetParams {
	if o == nil || IsNil(o.CreateTargetParams) {
		var ret ReplicateCreateTargetParams
		return ret
	}
	return *o.CreateTargetParams
}

// GetCreateTargetParamsOk returns a tuple with the CreateTargetParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Replicate) GetCreateTargetParamsOk() (*ReplicateCreateTargetParams, bool) {
	if o == nil || IsNil(o.CreateTargetParams) {
		return nil, false
	}
	return o.CreateTargetParams, true
}

// HasCreateTargetParams returns a boolean if a field has been set.
func (o *Replicate) HasCreateTargetParams() bool {
	if o != nil && !IsNil(o.CreateTargetParams) {
		return true
	}

	return false
}

// SetCreateTargetParams gets a reference to the given ReplicateCreateTargetParams and assigns it to the CreateTargetParams field.
func (o *Replicate) SetCreateTargetParams(v ReplicateCreateTargetParams) {
	o.CreateTargetParams = &v
}

// GetDocIds returns the DocIds field value if set, zero value otherwise.
func (o *Replicate) GetDocIds() []string {
	if o == nil || IsNil(o.DocIds) {
		var ret []string
		return ret
	}
	return o.DocIds
}

// GetDocIdsOk returns a tuple with the DocIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Replicate) GetDocIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.DocIds) {
		return nil, false
	}
	return o.DocIds, true
}

// HasDocIds returns a boolean if a field has been set.
func (o *Replicate) HasDocIds() bool {
	if o != nil && !IsNil(o.DocIds) {
		return true
	}

	return false
}

// SetDocIds gets a reference to the given []string and assigns it to the DocIds field.
func (o *Replicate) SetDocIds(v []string) {
	o.DocIds = v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *Replicate) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Replicate) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *Replicate) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *Replicate) SetFilter(v string) {
	o.Filter = &v
}

// GetSourceProxy returns the SourceProxy field value if set, zero value otherwise.
func (o *Replicate) GetSourceProxy() string {
	if o == nil || IsNil(o.SourceProxy) {
		var ret string
		return ret
	}
	return *o.SourceProxy
}

// GetSourceProxyOk returns a tuple with the SourceProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Replicate) GetSourceProxyOk() (*string, bool) {
	if o == nil || IsNil(o.SourceProxy) {
		return nil, false
	}
	return o.SourceProxy, true
}

// HasSourceProxy returns a boolean if a field has been set.
func (o *Replicate) HasSourceProxy() bool {
	if o != nil && !IsNil(o.SourceProxy) {
		return true
	}

	return false
}

// SetSourceProxy gets a reference to the given string and assigns it to the SourceProxy field.
func (o *Replicate) SetSourceProxy(v string) {
	o.SourceProxy = &v
}

// GetTargetProxy returns the TargetProxy field value if set, zero value otherwise.
func (o *Replicate) GetTargetProxy() string {
	if o == nil || IsNil(o.TargetProxy) {
		var ret string
		return ret
	}
	return *o.TargetProxy
}

// GetTargetProxyOk returns a tuple with the TargetProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Replicate) GetTargetProxyOk() (*string, bool) {
	if o == nil || IsNil(o.TargetProxy) {
		return nil, false
	}
	return o.TargetProxy, true
}

// HasTargetProxy returns a boolean if a field has been set.
func (o *Replicate) HasTargetProxy() bool {
	if o != nil && !IsNil(o.TargetProxy) {
		return true
	}

	return false
}

// SetTargetProxy gets a reference to the given string and assigns it to the TargetProxy field.
func (o *Replicate) SetTargetProxy(v string) {
	o.TargetProxy = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *Replicate) GetSource() Request {
	if o == nil || IsNil(o.Source) {
		var ret Request
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Replicate) GetSourceOk() (*Request, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *Replicate) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given Request and assigns it to the Source field.
func (o *Replicate) SetSource(v Request) {
	o.Source = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *Replicate) GetTarget() Request {
	if o == nil || IsNil(o.Target) {
		var ret Request
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Replicate) GetTargetOk() (*Request, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *Replicate) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given Request and assigns it to the Target field.
func (o *Replicate) SetTarget(v Request) {
	o.Target = &v
}

func (o Replicate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Replicate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cancel) {
		toSerialize["cancel"] = o.Cancel
	}
	if !IsNil(o.Continuous) {
		toSerialize["continuous"] = o.Continuous
	}
	if !IsNil(o.CreateTarget) {
		toSerialize["create_target"] = o.CreateTarget
	}
	if !IsNil(o.CreateTargetParams) {
		toSerialize["create_target_params"] = o.CreateTargetParams
	}
	if !IsNil(o.DocIds) {
		toSerialize["doc_ids"] = o.DocIds
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.SourceProxy) {
		toSerialize["source_proxy"] = o.SourceProxy
	}
	if !IsNil(o.TargetProxy) {
		toSerialize["target_proxy"] = o.TargetProxy
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Replicate) UnmarshalJSON(bytes []byte) (err error) {
	varReplicate := _Replicate{}

	if err = json.Unmarshal(bytes, &varReplicate); err == nil {
		*o = Replicate(varReplicate)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "cancel")
		delete(additionalProperties, "continuous")
		delete(additionalProperties, "create_target")
		delete(additionalProperties, "create_target_params")
		delete(additionalProperties, "doc_ids")
		delete(additionalProperties, "filter")
		delete(additionalProperties, "source_proxy")
		delete(additionalProperties, "target_proxy")
		delete(additionalProperties, "source")
		delete(additionalProperties, "target")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableReplicate struct {
	value *Replicate
	isSet bool
}

func (v NullableReplicate) Get() *Replicate {
	return v.value
}

func (v *NullableReplicate) Set(val *Replicate) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicate) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicate(val *Replicate) *NullableReplicate {
	return &NullableReplicate{value: val, isSet: true}
}

func (v NullableReplicate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


