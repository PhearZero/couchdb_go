/*
CouchDB API

*Note* This is not a definitive implementation of the CouchDB API, it's missing a lot of the endpoints for server/database managment and everything for attachments all COPY operations and probably a few other parts.  It also targets golang, as such the '#/definitions/Document' is intentionally left empty to generate a go `interface`, which you can then cast to a `map[string]interface{}`. 

API version: 4.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package couchdb_go

import (
	"encoding/json"
)

// checks if the InlineResponse2006ExecutionStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InlineResponse2006ExecutionStats{}

// InlineResponse2006ExecutionStats struct for InlineResponse2006ExecutionStats
type InlineResponse2006ExecutionStats struct {
	TotalKeysExamined *float32 `json:"total_keys_examined,omitempty"`
	TotalDocsExamined *float32 `json:"total_docs_examined,omitempty"`
	TotalQuorumDocsExamined *float32 `json:"total_quorum_docs_examined,omitempty"`
	ResultsReturned *float32 `json:"results_returned,omitempty"`
	ExecutionTimeMs *float32 `json:"execution_time_ms,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InlineResponse2006ExecutionStats InlineResponse2006ExecutionStats

// NewInlineResponse2006ExecutionStats instantiates a new InlineResponse2006ExecutionStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2006ExecutionStats() *InlineResponse2006ExecutionStats {
	this := InlineResponse2006ExecutionStats{}
	return &this
}

// NewInlineResponse2006ExecutionStatsWithDefaults instantiates a new InlineResponse2006ExecutionStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2006ExecutionStatsWithDefaults() *InlineResponse2006ExecutionStats {
	this := InlineResponse2006ExecutionStats{}
	return &this
}

// GetTotalKeysExamined returns the TotalKeysExamined field value if set, zero value otherwise.
func (o *InlineResponse2006ExecutionStats) GetTotalKeysExamined() float32 {
	if o == nil || IsNil(o.TotalKeysExamined) {
		var ret float32
		return ret
	}
	return *o.TotalKeysExamined
}

// GetTotalKeysExaminedOk returns a tuple with the TotalKeysExamined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2006ExecutionStats) GetTotalKeysExaminedOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalKeysExamined) {
		return nil, false
	}
	return o.TotalKeysExamined, true
}

// HasTotalKeysExamined returns a boolean if a field has been set.
func (o *InlineResponse2006ExecutionStats) HasTotalKeysExamined() bool {
	if o != nil && !IsNil(o.TotalKeysExamined) {
		return true
	}

	return false
}

// SetTotalKeysExamined gets a reference to the given float32 and assigns it to the TotalKeysExamined field.
func (o *InlineResponse2006ExecutionStats) SetTotalKeysExamined(v float32) {
	o.TotalKeysExamined = &v
}

// GetTotalDocsExamined returns the TotalDocsExamined field value if set, zero value otherwise.
func (o *InlineResponse2006ExecutionStats) GetTotalDocsExamined() float32 {
	if o == nil || IsNil(o.TotalDocsExamined) {
		var ret float32
		return ret
	}
	return *o.TotalDocsExamined
}

// GetTotalDocsExaminedOk returns a tuple with the TotalDocsExamined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2006ExecutionStats) GetTotalDocsExaminedOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalDocsExamined) {
		return nil, false
	}
	return o.TotalDocsExamined, true
}

// HasTotalDocsExamined returns a boolean if a field has been set.
func (o *InlineResponse2006ExecutionStats) HasTotalDocsExamined() bool {
	if o != nil && !IsNil(o.TotalDocsExamined) {
		return true
	}

	return false
}

// SetTotalDocsExamined gets a reference to the given float32 and assigns it to the TotalDocsExamined field.
func (o *InlineResponse2006ExecutionStats) SetTotalDocsExamined(v float32) {
	o.TotalDocsExamined = &v
}

// GetTotalQuorumDocsExamined returns the TotalQuorumDocsExamined field value if set, zero value otherwise.
func (o *InlineResponse2006ExecutionStats) GetTotalQuorumDocsExamined() float32 {
	if o == nil || IsNil(o.TotalQuorumDocsExamined) {
		var ret float32
		return ret
	}
	return *o.TotalQuorumDocsExamined
}

// GetTotalQuorumDocsExaminedOk returns a tuple with the TotalQuorumDocsExamined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2006ExecutionStats) GetTotalQuorumDocsExaminedOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalQuorumDocsExamined) {
		return nil, false
	}
	return o.TotalQuorumDocsExamined, true
}

// HasTotalQuorumDocsExamined returns a boolean if a field has been set.
func (o *InlineResponse2006ExecutionStats) HasTotalQuorumDocsExamined() bool {
	if o != nil && !IsNil(o.TotalQuorumDocsExamined) {
		return true
	}

	return false
}

// SetTotalQuorumDocsExamined gets a reference to the given float32 and assigns it to the TotalQuorumDocsExamined field.
func (o *InlineResponse2006ExecutionStats) SetTotalQuorumDocsExamined(v float32) {
	o.TotalQuorumDocsExamined = &v
}

// GetResultsReturned returns the ResultsReturned field value if set, zero value otherwise.
func (o *InlineResponse2006ExecutionStats) GetResultsReturned() float32 {
	if o == nil || IsNil(o.ResultsReturned) {
		var ret float32
		return ret
	}
	return *o.ResultsReturned
}

// GetResultsReturnedOk returns a tuple with the ResultsReturned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2006ExecutionStats) GetResultsReturnedOk() (*float32, bool) {
	if o == nil || IsNil(o.ResultsReturned) {
		return nil, false
	}
	return o.ResultsReturned, true
}

// HasResultsReturned returns a boolean if a field has been set.
func (o *InlineResponse2006ExecutionStats) HasResultsReturned() bool {
	if o != nil && !IsNil(o.ResultsReturned) {
		return true
	}

	return false
}

// SetResultsReturned gets a reference to the given float32 and assigns it to the ResultsReturned field.
func (o *InlineResponse2006ExecutionStats) SetResultsReturned(v float32) {
	o.ResultsReturned = &v
}

// GetExecutionTimeMs returns the ExecutionTimeMs field value if set, zero value otherwise.
func (o *InlineResponse2006ExecutionStats) GetExecutionTimeMs() float32 {
	if o == nil || IsNil(o.ExecutionTimeMs) {
		var ret float32
		return ret
	}
	return *o.ExecutionTimeMs
}

// GetExecutionTimeMsOk returns a tuple with the ExecutionTimeMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2006ExecutionStats) GetExecutionTimeMsOk() (*float32, bool) {
	if o == nil || IsNil(o.ExecutionTimeMs) {
		return nil, false
	}
	return o.ExecutionTimeMs, true
}

// HasExecutionTimeMs returns a boolean if a field has been set.
func (o *InlineResponse2006ExecutionStats) HasExecutionTimeMs() bool {
	if o != nil && !IsNil(o.ExecutionTimeMs) {
		return true
	}

	return false
}

// SetExecutionTimeMs gets a reference to the given float32 and assigns it to the ExecutionTimeMs field.
func (o *InlineResponse2006ExecutionStats) SetExecutionTimeMs(v float32) {
	o.ExecutionTimeMs = &v
}

func (o InlineResponse2006ExecutionStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InlineResponse2006ExecutionStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalKeysExamined) {
		toSerialize["total_keys_examined"] = o.TotalKeysExamined
	}
	if !IsNil(o.TotalDocsExamined) {
		toSerialize["total_docs_examined"] = o.TotalDocsExamined
	}
	if !IsNil(o.TotalQuorumDocsExamined) {
		toSerialize["total_quorum_docs_examined"] = o.TotalQuorumDocsExamined
	}
	if !IsNil(o.ResultsReturned) {
		toSerialize["results_returned"] = o.ResultsReturned
	}
	if !IsNil(o.ExecutionTimeMs) {
		toSerialize["execution_time_ms"] = o.ExecutionTimeMs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InlineResponse2006ExecutionStats) UnmarshalJSON(bytes []byte) (err error) {
	varInlineResponse2006ExecutionStats := _InlineResponse2006ExecutionStats{}

	if err = json.Unmarshal(bytes, &varInlineResponse2006ExecutionStats); err == nil {
		*o = InlineResponse2006ExecutionStats(varInlineResponse2006ExecutionStats)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "total_keys_examined")
		delete(additionalProperties, "total_docs_examined")
		delete(additionalProperties, "total_quorum_docs_examined")
		delete(additionalProperties, "results_returned")
		delete(additionalProperties, "execution_time_ms")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInlineResponse2006ExecutionStats struct {
	value *InlineResponse2006ExecutionStats
	isSet bool
}

func (v NullableInlineResponse2006ExecutionStats) Get() *InlineResponse2006ExecutionStats {
	return v.value
}

func (v *NullableInlineResponse2006ExecutionStats) Set(val *InlineResponse2006ExecutionStats) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2006ExecutionStats) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2006ExecutionStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2006ExecutionStats(val *InlineResponse2006ExecutionStats) *NullableInlineResponse2006ExecutionStats {
	return &NullableInlineResponse2006ExecutionStats{value: val, isSet: true}
}

func (v NullableInlineResponse2006ExecutionStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2006ExecutionStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


